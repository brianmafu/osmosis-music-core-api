# Generated by Django 2.1.5 on 2020-09-29 12:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.IntegerField()),
                ('user_name', models.CharField(max_length=200)),
                ('user_email', models.CharField(max_length=200)),
                ('user_phone', models.CharField(max_length=30)),
                ('user_profile_pic', models.CharField(max_length=100)),
                ('user_package_id', models.IntegerField()),
                ('user_package_paid_date', models.DateTimeField()),
                ('user_package_expiry_date', models.DateTimeField()),
                ('user_token', models.CharField(max_length=1000)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('thumbnail', models.CharField(max_length=10000)),
                ('stars', models.IntegerField(default=0)),
                ('album_status', models.CharField(choices=[(0, 'ENABLE'), (1, 'DISABLE')], max_length=10)),
                ('genre', models.CharField(choices=[('Unknown', 'Unknown'), ('Movie', 'Movie'), ('Pop', 'Pop'), ('Rock', 'Rock'), ('Alternative/Indie', 'Alternative/Indie'), ('Remix', 'Remix'), ('Instrumental', 'Instrumental'), ('Folk', 'Folk'), ('Electronic', 'Electronic')], default='Unknown', max_length=50)),
                ('language', models.CharField(choices=[('English', 'English'), ('Nepali', 'Nepali'), ('Hindi', 'Hindi'), ('Dzongkha', 'Dzongkha')], default='English', max_length=10)),
                ('duration', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'album',
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('first_name', models.CharField(max_length=1000)),
                ('last_name', models.CharField(blank=True, max_length=1000)),
                ('name', models.CharField(blank=True, max_length=1000)),
                ('profileImageURL', models.CharField(blank=True, max_length=2000)),
                ('thumbnailProfileImageURL', models.CharField(blank=True, max_length=2000)),
                ('about', models.CharField(max_length=3000)),
                ('stars', models.IntegerField(default=0)),
                ('artist_status', models.CharField(choices=[(0, 'ENABLE'), (1, 'DISABLE')], max_length=10)),
                ('language', models.CharField(choices=[('English', 'English'), ('Nepali', 'Nepali'), ('Hindi', 'Hindi'), ('Dzongkha', 'Dzongkha')], default='English', max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'artist',
            },
        ),
        migrations.CreateModel(
            name='BannerSlider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_slider_id', models.IntegerField()),
                ('banner_slider_name', models.CharField(max_length=1000)),
                ('banner_slider_name_alignment', models.CharField(choices=[(0, 'Left'), (1, 'Center'), (2, 'Right')], max_length=10)),
                ('banner_slider_image', models.CharField(max_length=1000)),
                ('banner_slider_show_button', models.IntegerField()),
                ('banner_slider_button_alignment', models.CharField(choices=[(0, 'Left'), (1, 'Center'), (2, 'Right')], max_length=10)),
                ('banner_slider_button_text', models.CharField(max_length=20)),
                ('banner_slider_order', models.IntegerField()),
                ('banner_slider_status', models.CharField(choices=[(0, 'ENABLE'), (1, 'DISABLE')], max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'banner_slider',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('category_name', models.CharField(max_length=100)),
                ('parent_category_id', models.CharField(max_length=11)),
                ('category_status', models.CharField(choices=[(0, 'ENABLE'), (1, 'DISABLE')], max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='HomeComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_components_id', models.IntegerField()),
                ('home_components_name', models.CharField(max_length=100)),
                ('home_components_description', models.TextField()),
                ('home_components_item_display_count', models.IntegerField()),
                ('home_components_order', models.IntegerField()),
                ('home_components_status', models.CharField(choices=[(0, 'ENABLE'), (1, 'DISABLE')], max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'home_component',
            },
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.IntegerField()),
                ('settings_name', models.CharField(max_length=100)),
                ('settings_value', models.CharField(max_length=100)),
                ('settings_status', models.CharField(choices=[(0, 'ENABLE'), (1, 'DISABLE')], max_length=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification_settings',
            },
        ),
        migrations.CreateModel(
            name='PackageSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_id', models.IntegerField()),
                ('package_name', models.CharField(max_length=1000)),
                ('package_duration', models.CharField(max_length=100)),
                ('package_price', models.CharField(max_length=100)),
                ('package_status', models.CharField(choices=[(0, 'ENABLE'), (1, 'DISABLE')], max_length=10)),
                ('package_note', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'package_settings',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method_id', models.IntegerField()),
                ('payment_method_name', models.CharField(max_length=100)),
                ('payment_method_currency', models.CharField(max_length=10)),
                ('payment_method_public_key', models.CharField(max_length=255)),
                ('payment_method_secret_key', models.CharField(max_length=255)),
                ('payment_method_status', models.CharField(choices=[(0, 'ENABLE'), (1, 'DISABLE')], max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'payment_method',
            },
        ),
        migrations.CreateModel(
            name='SettingsFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settings_flag_id', models.IntegerField()),
                ('settings_flag_name', models.CharField(max_length=100)),
                ('settings_flag_valye', models.CharField(choices=[(0, 'ENABLE'), (1, 'DISABLE')], max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'settings_flag',
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('description', models.CharField(max_length=1000)),
                ('fileName', models.CharField(max_length=1000)),
                ('stars', models.IntegerField(default=0)),
                ('imageURL', models.CharField(max_length=10000)),
                ('thumbnailImageURL', models.CharField(max_length=10000)),
                ('genre', models.CharField(choices=[('Unknown', 'Unknown'), ('Movie', 'Movie'), ('Pop', 'Pop'), ('Rock', 'Rock'), ('Alternative/Indie', 'Alternative/Indie'), ('Remix', 'Remix'), ('Instrumental', 'Instrumental'), ('Folk', 'Folk'), ('Electronic', 'Electronic')], default='Unknown', max_length=50)),
                ('language', models.CharField(choices=[('English', 'English'), ('Nepali', 'Nepali'), ('Hindi', 'Hindi'), ('Dzongkha', 'Dzongkha')], default='English', max_length=10)),
                ('duration', models.CharField(max_length=10000)),
                ('durationInSeconds', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('album', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='music_core.Album')),
                ('artist', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='music_core.Artist')),
            ],
            options={
                'db_table': 'music',
            },
        ),
        migrations.CreateModel(
            name='UserPaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_payment_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('package_id', models.IntegerField()),
                ('card_name', models.CharField(max_length=100)),
                ('amount', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user_payment',
            },
        ),
        migrations.CreateModel(
            name='UserPlaylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('cover_art', models.CharField(blank=True, max_length=2000)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_playlist',
            },
        ),
        migrations.CreateModel(
            name='UserPlaylistMusic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('cover_art', models.CharField(blank=True, max_length=2000)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('song', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='music_core.Song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_playlist_music',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('lyrics', models.CharField(max_length=1000)),
                ('url', models.CharField(max_length=1000)),
                ('genre', models.CharField(choices=[('Unknown', 'Unknown'), ('Movie', 'Movie'), ('Pop', 'Pop'), ('Rock', 'Rock'), ('Alternative/Indie', 'Alternative/Indie'), ('Remix', 'Remix'), ('Instrumental', 'Instrumental'), ('Folk', 'Folk'), ('Electronic', 'Electronic')], default='Unknown', max_length=50)),
                ('language', models.CharField(choices=[('English', 'English'), ('Nepali', 'Nepali'), ('Hindi', 'Hindi'), ('Dzongkha', 'Dzongkha')], default='English', max_length=10)),
                ('image', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('artist', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='music_core.Artist')),
            ],
        ),
        migrations.AddField(
            model_name='album',
            name='artist',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='music_core.Artist'),
        ),
    ]
